// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(uuid())
  username     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     Post[]
  Like      Like[]
  Comment   Comment[]
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  author    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Like      Like[]
  Comment   Comment[]
}

model Like {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  user      User     @relation(fields: [userId], references: [id],onDelete: Cascade)
  userId    String
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id],onDelete: Cascade)
  postId    String
  user      User     @relation(fields: [userId], references: [id],onDelete: Cascade)
  userId    String
}
